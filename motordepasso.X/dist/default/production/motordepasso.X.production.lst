

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 02 16:37:33 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_motorantpasso
   712                           	FNCALL	_main,_motorpasso
   713                           	FNCALL	_main,_motorpasso_init
   714                           	FNCALL	_motorpasso,_delay
   715                           	FNCALL	_motorantpasso,_delay
   716                           	FNROOT	_main
   717                           	global	_passo
   718                           	global	_passos
   719                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
   720                           global __pidataCOMMON
   721                           __pidataCOMMON:
   722  06C4                     	file	"motorpasso.c"
   723                           	line	45
   724                           
   725                           ;initializer for _qtdpassos
   726                           	retlw	04h
   727  06C4  3404               	line	30
   728                           
   729                           ;initializer for _numpassos
   730                           	retlw	04h
   731  06C5  3404               psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   732                           global __pidataBANK0
   733                           __pidataBANK0:
   734  06C6                     	line	42
   735                           
   736                           ;initializer for _passo
   737                           	retlw	020h
   738  06C6  3420               	retlw	010h
   739  06C7  3410               	retlw	080h
   740  06C8  3480               	retlw	040h
   741  06C9  3440               	line	27
   742                           
   743                           ;initializer for _passos
   744                           	retlw	040h
   745  06CA  3440               	retlw	080h
   746  06CB  3480               	retlw	010h
   747  06CC  3410               	retlw	020h
   748  06CD  3420               	global	_passoatual
   749                           	global	_passoagora
   750                           	global	_PORTD
   751                           _PORTD	set	0x8
   752  0008                     	global	_PORTDbits
   753                           _PORTDbits	set	0x8
   754  0008                     	global	_TRISDbits
   755                           _TRISDbits	set	0x88
   756  0088                     ; #config settings
   757                           global __CFG_FOSC$INTRC_NOCLKOUT
   758                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   759  0000                     global __CFG_WDTE$OFF
   760                           __CFG_WDTE$OFF equ 0x0
   761  0000                     global __CFG_PWRTE$OFF
   762                           __CFG_PWRTE$OFF equ 0x0
   763  0000                     global __CFG_MCLRE$OFF
   764                           __CFG_MCLRE$OFF equ 0x0
   765  0000                     global __CFG_CP$OFF
   766                           __CFG_CP$OFF equ 0x0
   767  0000                     global __CFG_CPD$OFF
   768                           __CFG_CPD$OFF equ 0x0
   769  0000                     global __CFG_BOREN$OFF
   770                           __CFG_BOREN$OFF equ 0x0
   771  0000                     global __CFG_IESO$OFF
   772                           __CFG_IESO$OFF equ 0x0
   773  0000                     global __CFG_FCMEN$OFF
   774                           __CFG_FCMEN$OFF equ 0x0
   775  0000                     global __CFG_LVP$OFF
   776                           __CFG_LVP$OFF equ 0x0
   777  0000                     global __CFG_BOR4V$BOR40V
   778                           __CFG_BOR4V$BOR40V equ 0x0
   779  0000                     global __CFG_WRT$OFF
   780                           __CFG_WRT$OFF equ 0x0
   781  0000                     	file	"C:\Users\20185070\AppData\Local\Temp\sak0."
   782                           	line	#
   783                           psect cinit,class=CODE,delta=2
   784                           global start_initialization
   785                           start_initialization:
   786  07DE                     
   787                           global __initialization
   788                           __initialization:
   789  07DE                     psect	bssCOMMON,class=COMMON,space=1,noexec
   790                           global __pbssCOMMON
   791                           __pbssCOMMON:
   792  007A                     _passoatual:
   793  007A                            ds      2
   794  007A                     
   795                           psect	dataCOMMON,class=COMMON,space=1,noexec
   796                           global __pdataCOMMON
   797                           __pdataCOMMON:
   798  007C                     	file	"motorpasso.c"
   799                           	line	45
   800                           _qtdpassos:
   801  007C                            ds      1
   802  007C                     
   803                           psect	dataCOMMON
   804                           	file	"motorpasso.c"
   805                           	line	30
   806                           _numpassos:
   807  007D                            ds      1
   808  007D                     
   809                           psect	bssBANK0,class=BANK0,space=1,noexec
   810                           global __pbssBANK0
   811                           __pbssBANK0:
   812  0028                     _passoagora:
   813  0028                            ds      2
   814  0028                     
   815                           psect	dataBANK0,class=BANK0,space=1,noexec
   816                           global __pdataBANK0
   817                           __pdataBANK0:
   818  0020                     	file	"motorpasso.c"
   819                           	line	42
   820                           _passo:
   821  0020                            ds      4
   822  0020                     
   823                           psect	dataBANK0
   824                           	file	"motorpasso.c"
   825                           	line	27
   826                           _passos:
   827  0024                            ds      4
   828  0024                     
   829                           	file	"C:\Users\20185070\AppData\Local\Temp\sak0."
   830                           	line	#
   831                           global btemp
   832                           psect inittext,class=CODE,delta=2
   833                           global init_fetch0,btemp
   834                           ;	Called with low address in FSR and high address in W
   835                           init_fetch0:
   836  06DB                     	movf btemp,w
   837  06DB  087E               	movwf pclath
   838  06DC  008A               	movf btemp+1,w
   839  06DD  087F               	movwf pc
   840  06DE  0082               global init_ram0
   841                           ;Called with:
   842                           ;	high address of idata address in btemp 
   843                           ;	low address of idata address in btemp+1 
   844                           ;	low address of data in FSR
   845                           ;	high address + 1 of data in btemp-1
   846                           init_ram0:
   847  06DF                     	fcall init_fetch0
   848  06DF  120A  118A  26DB  120A  118A  	movwf indf,f
   849  06E4  0080               	incf fsr,f
   850  06E5  0A84               	movf fsr,w
   851  06E6  0804               	xorwf btemp-1,w
   852  06E7  067D               	btfsc status,2
   853  06E8  1903               	retlw 0
   854  06E9  3400               	incf btemp+1,f
   855  06EA  0AFF               	btfsc status,2
   856  06EB  1903               	incf btemp,f
   857  06EC  0AFE               	goto init_ram0
   858  06ED  2EDF               ; Initialize objects allocated to BANK0
   859                           psect cinit,class=CODE,delta=2,merge=1
   860                           global init_ram0, __pidataBANK0
   861                           	bcf	status, 7	;select IRP bank0
   862  07DE  1383               	movlw low(__pdataBANK0+8)
   863  07DF  3028               	movwf btemp-1,f
   864  07E0  00FD               	movlw high(__pidataBANK0)
   865  07E1  3006               	movwf btemp,f
   866  07E2  00FE               	movlw low(__pidataBANK0)
   867  07E3  30C6               	movwf btemp+1,f
   868  07E4  00FF               	movlw low(__pdataBANK0)
   869  07E5  3020               	movwf fsr,f
   870  07E6  0084               	fcall init_ram0
   871  07E7  120A  118A  26DF  120A  118A  ; Initialize objects allocated to COMMON
   872                           	global __pidataCOMMON
   873                           psect cinit,class=CODE,delta=2,merge=1
   874                           	fcall	__pidataCOMMON+0		;fetch initializer
   875  07EC  120A  118A  26C4  120A  118A  	movwf	__pdataCOMMON+0&07fh		
   876  07F1  00FC               	fcall	__pidataCOMMON+1		;fetch initializer
   877  07F2  120A  118A  26C5  120A  118A  	movwf	__pdataCOMMON+1&07fh		
   878  07F7  00FD               	line	#
   879                           ; Clear objects allocated to BANK0
   880                           psect cinit,class=CODE,delta=2,merge=1
   881                           	clrf	((__pbssBANK0)+0)&07Fh
   882  07F8  01A8               	clrf	((__pbssBANK0)+1)&07Fh
   883  07F9  01A9               ; Clear objects allocated to COMMON
   884                           psect cinit,class=CODE,delta=2,merge=1
   885                           	clrf	((__pbssCOMMON)+0)&07Fh
   886  07FA  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
   887  07FB  01FB               psect cinit,class=CODE,delta=2,merge=1
   888                           global end_of_initialization,__end_of__initialization
   889                           
   890                           ;End of C runtime variable initialization code
   891                           
   892                           end_of_initialization:
   893  07FC                     __end_of__initialization:
   894  07FC                     clrf status
   895  07FC  0183               ljmp _main	;jump to C main() function
   896  07FD  120A  118A  2F61   psect	cstackCOMMON,class=COMMON,space=1,noexec
   897                           global __pcstackCOMMON
   898                           __pcstackCOMMON:
   899  0070                     ?_motorpasso_init:	; 1 bytes @ 0x0
   900  0070                     ??_motorpasso_init:	; 1 bytes @ 0x0
   901  0070                     ?_delay:	; 1 bytes @ 0x0
   902  0070                     ?_main:	; 1 bytes @ 0x0
   903  0070                     	global	delay@t
   904                           delay@t:	; 2 bytes @ 0x0
   905  0070                     	ds	2
   906  0070                     ??_delay:	; 1 bytes @ 0x2
   907  0072                     	ds	1
   908  0072                     ?_motorpasso:	; 1 bytes @ 0x3
   909  0073                     ?_motorantpasso:	; 1 bytes @ 0x3
   910  0073                     	global	motorpasso@numpassos
   911                           motorpasso@numpassos:	; 2 bytes @ 0x3
   912  0073                     	global	motorantpasso@qtdpassos
   913                           motorantpasso@qtdpassos:	; 2 bytes @ 0x3
   914  0073                     	ds	2
   915  0073                     	global	motorpasso@t
   916                           motorpasso@t:	; 2 bytes @ 0x5
   917  0075                     	global	motorantpasso@t
   918                           motorantpasso@t:	; 2 bytes @ 0x5
   919  0075                     	ds	2
   920  0075                     ??_motorpasso:	; 1 bytes @ 0x7
   921  0077                     ??_motorantpasso:	; 1 bytes @ 0x7
   922  0077                     	ds	1
   923  0077                     ??_main:	; 1 bytes @ 0x8
   924  0078                     	global	main@estado
   925                           main@estado:	; 2 bytes @ 0x8
   926  0078                     	ds	2
   927  0078                     ;!
   928                           ;!Data Sizes:
   929                           ;!    Strings     0
   930                           ;!    Constant    0
   931                           ;!    Data        10
   932                           ;!    BSS         4
   933                           ;!    Persistent  0
   934                           ;!    Stack       0
   935                           ;!
   936                           ;!Auto Spaces:
   937                           ;!    Space          Size  Autos    Used
   938                           ;!    COMMON           14     10      14
   939                           ;!    BANK0            80      0      10
   940                           ;!    BANK1            80      0       0
   941                           ;!    BANK3            96      0       0
   942                           ;!    BANK2            96      0       0
   943                           
   944                           ;!
   945                           ;!Pointer List with Targets:
   946                           ;!
   947                           ;!    None.
   948                           
   949                           
   950                           ;!
   951                           ;!Critical Paths under _main in COMMON
   952                           ;!
   953                           ;!    _main->_motorantpasso
   954                           ;!    _main->_motorpasso
   955                           ;!    _motorpasso->_delay
   956                           ;!    _motorantpasso->_delay
   957                           ;!
   958                           ;!Critical Paths under _main in BANK0
   959                           ;!
   960                           ;!    None.
   961                           ;!
   962                           ;!Critical Paths under _main in BANK1
   963                           ;!
   964                           ;!    None.
   965                           ;!
   966                           ;!Critical Paths under _main in BANK3
   967                           ;!
   968                           ;!    None.
   969                           ;!
   970                           ;!Critical Paths under _main in BANK2
   971                           ;!
   972                           ;!    None.
   973                           
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977                           
   978                           ;!
   979                           ;!Call Graph Tables:
   980                           ;!
   981                           ;! ---------------------------------------------------------------------------------
   982                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   983                           ;! ---------------------------------------------------------------------------------
   984                           ;! (0) _main                                                 2     2      0     771
   985                           ;!                                              8 COMMON     2     2      0
   986                           ;!                      _motorantpasso
   987                           ;!                         _motorpasso
   988                           ;!                    _motorpasso_init
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _motorpasso_init                                      0     0      0       0
   991                           ;! ---------------------------------------------------------------------------------
   992                           ;! (1) _motorpasso                                           5     1      4     371
   993                           ;!                                              3 COMMON     5     1      4
   994                           ;!                              _delay
   995                           ;! ---------------------------------------------------------------------------------
   996                           ;! (1) _motorantpasso                                        5     1      4     371
   997                           ;!                                              3 COMMON     5     1      4
   998                           ;!                              _delay
   999                           ;! ---------------------------------------------------------------------------------
  1000                           ;! (2) _delay                                                3     1      2     175
  1001                           ;!                                              0 COMMON     3     1      2
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! Estimated maximum stack depth 2
  1004                           ;! ---------------------------------------------------------------------------------
  1005                           ;!
  1006                           ;! Call Graph Graphs:
  1007                           ;!
  1008                           ;! _main (ROOT)
  1009                           ;!   _motorantpasso
  1010                           ;!     _delay
  1011                           ;!   _motorpasso
  1012                           ;!     _delay
  1013                           ;!   _motorpasso_init
  1014                           ;!
  1015                           
  1016                           ;! Address spaces:
  1017                           
  1018                           ;!Name               Size   Autos  Total    Cost      Usage
  1019                           ;!BANK3               60      0       0       9        0.0%
  1020                           ;!BITBANK3            60      0       0       8        0.0%
  1021                           ;!SFR3                 0      0       0       4        0.0%
  1022                           ;!BITSFR3              0      0       0       4        0.0%
  1023                           ;!BANK2               60      0       0      11        0.0%
  1024                           ;!BITBANK2            60      0       0      10        0.0%
  1025                           ;!SFR2                 0      0       0       5        0.0%
  1026                           ;!BITSFR2              0      0       0       5        0.0%
  1027                           ;!BANK1               50      0       0       7        0.0%
  1028                           ;!BITBANK1            50      0       0       6        0.0%
  1029                           ;!SFR1                 0      0       0       2        0.0%
  1030                           ;!BITSFR1              0      0       0       2        0.0%
  1031                           ;!BANK0               50      0       A       5       12.5%
  1032                           ;!BITBANK0            50      0       0       4        0.0%
  1033                           ;!SFR0                 0      0       0       1        0.0%
  1034                           ;!BITSFR0              0      0       0       1        0.0%
  1035                           ;!COMMON               E      A       E       1      100.0%
  1036                           ;!BITCOMMON            E      0       0       0        0.0%
  1037                           ;!CODE                 0      0       0       0        0.0%
  1038                           ;!DATA                 0      0      18      12        0.0%
  1039                           ;!ABS                  0      0      18       3        0.0%
  1040                           ;!NULL                 0      0       0       0        0.0%
  1041                           ;!STACK                0      0       0       2        0.0%
  1042                           ;!EEDATA             100      0       0       0        0.0%
  1043                           
  1044                           	global	_main
  1045                           
  1046 ;; *************** function _main *****************
  1047 ;; Defined at:
  1048 ;;		line 9 in file "main.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  estado          2    8[COMMON] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : B00/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       0       0       0       0
  1063 ;;      Locals:         2       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		_motorantpasso
  1070 ;;		_motorpasso
  1071 ;;		_motorpasso_init
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1077                           	file	"main.c"
  1078                           	line	9
  1079                           global __pmaintext
  1080                           __pmaintext:	;psect for function _main
  1081  0761                     psect	maintext
  1082                           	file	"main.c"
  1083                           	line	9
  1084                           	global	__size_of_main
  1085                           	__size_of_main	equ	__end_of_main-_main
  1086  007D                     	
  1087                           _main:	
  1088  0761                     ;incstack = 0
  1089                           	opt	stack 6
  1090                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1091                           	line	12
  1092                           	
  1093                           l769:	
  1094  0761                     ;main.c: 12:     int estado = 0;
  1095                           	clrf	(main@estado)
  1096  0761  01F8               	clrf	(main@estado+1)
  1097  0762  01F9               	line	13
  1098                           	
  1099                           l771:	
  1100  0763                     ;main.c: 13:     motorpasso_init();
  1101                           	fcall	_motorpasso_init
  1102  0763  120A  118A  26CE  120A  118A  	goto	l797
  1103  0768  2FC3               	line	15
  1104                           ;main.c: 15:     while( 1 )
  1105                           	
  1106                           l21:	
  1107  0769                     	line	17
  1108                           ;main.c: 16:     {;main.c: 17:         switch(estado)
  1109                           	goto	l797
  1110  0769  2FC3               	line	19
  1111                           ;main.c: 18:         {;main.c: 19:             case 0:
  1112                           	
  1113                           l23:	
  1114  076A                     	line	20
  1115                           	
  1116                           l773:	
  1117  076A                     ;main.c: 20:                 estado = 1;
  1118                           	movlw	01h
  1119  076A  3001               	movwf	(main@estado)
  1120  076B  00F8               	movlw	0
  1121  076C  3000               	movwf	((main@estado))+1
  1122  076D  00F9               	line	21
  1123                           ;main.c: 21:                 break;
  1124                           	goto	l797
  1125  076E  2FC3               	line	22
  1126                           ;main.c: 22:             case 1:
  1127                           	
  1128                           l25:	
  1129  076F                     	line	23
  1130                           ;main.c: 23:                 if (PORTDbits.RD0 == 1)
  1131                           	bcf	status, 5	;RP0=0, select bank0
  1132  076F  1283               	bcf	status, 6	;RP1=0, select bank0
  1133  0770  1303               	btfss	(8),0	;volatile
  1134  0771  1C08               	goto	u121
  1135  0772  2F74               	goto	u120
  1136  0773  2F75               u121:
  1137  0774                     	goto	l777
  1138  0774  2F7A               u120:
  1139  0775                     	line	24
  1140                           	
  1141                           l775:	
  1142  0775                     ;main.c: 24:                     estado = 2;
  1143                           	movlw	02h
  1144  0775  3002               	movwf	(main@estado)
  1145  0776  00F8               	movlw	0
  1146  0777  3000               	movwf	((main@estado))+1
  1147  0778  00F9               	goto	l777
  1148  0779  2F7A               	
  1149                           l26:	
  1150  077A                     	line	25
  1151                           	
  1152                           l777:	
  1153  077A                     ;main.c: 25:                 if (PORTDbits.RD1 == 1)
  1154                           	btfss	(8),1	;volatile
  1155  077A  1C88               	goto	u131
  1156  077B  2F7D               	goto	u130
  1157  077C  2F7E               u131:
  1158  077D                     	goto	l797
  1159  077D  2FC3               u130:
  1160  077E                     	line	26
  1161                           	
  1162                           l779:	
  1163  077E                     ;main.c: 26:                     estado = 3;
  1164                           	movlw	03h
  1165  077E  3003               	movwf	(main@estado)
  1166  077F  00F8               	movlw	0
  1167  0780  3000               	movwf	((main@estado))+1
  1168  0781  00F9               	goto	l797
  1169  0782  2FC3               	
  1170                           l27:	
  1171  0783                     	line	27
  1172                           ;main.c: 27:                 break;
  1173                           	goto	l797
  1174  0783  2FC3               	line	28
  1175                           ;main.c: 28:             case 2:
  1176                           	
  1177                           l28:	
  1178  0784                     	line	30
  1179                           	
  1180                           l781:	
  1181  0784                     ;main.c: 30:                 motorpasso(48, 100);
  1182                           	movlw	030h
  1183  0784  3030               	movwf	(motorpasso@numpassos)
  1184  0785  00F3               	movlw	0
  1185  0786  3000               	movwf	((motorpasso@numpassos))+1
  1186  0787  00F4               	movlw	064h
  1187  0788  3064               	movwf	(motorpasso@t)
  1188  0789  00F5               	movlw	0
  1189  078A  3000               	movwf	((motorpasso@t))+1
  1190  078B  00F6               	fcall	_motorpasso
  1191  078C  120A  118A  2705  120A  118A  	line	31
  1192                           	
  1193                           l783:	
  1194  0791                     ;main.c: 31:                 if (PORTDbits.RD1 ==1)
  1195                           	bcf	status, 5	;RP0=0, select bank0
  1196  0791  1283               	bcf	status, 6	;RP1=0, select bank0
  1197  0792  1303               	btfss	(8),1	;volatile
  1198  0793  1C88               	goto	u141
  1199  0794  2F96               	goto	u140
  1200  0795  2F97               u141:
  1201  0796                     	goto	l797
  1202  0796  2FC3               u140:
  1203  0797                     	line	32
  1204                           	
  1205                           l785:	
  1206  0797                     ;main.c: 32:                     estado = 4;
  1207                           	movlw	04h
  1208  0797  3004               	movwf	(main@estado)
  1209  0798  00F8               	movlw	0
  1210  0799  3000               	movwf	((main@estado))+1
  1211  079A  00F9               	goto	l797
  1212  079B  2FC3               	
  1213                           l29:	
  1214  079C                     	line	33
  1215                           ;main.c: 33:                 break;
  1216                           	goto	l797
  1217  079C  2FC3               	line	34
  1218                           ;main.c: 34:             case 3:
  1219                           	
  1220                           l30:	
  1221  079D                     	line	35
  1222                           	
  1223                           l787:	
  1224  079D                     ;main.c: 35:                 motorantpasso(48, 100);
  1225                           	movlw	030h
  1226  079D  3030               	movwf	(motorantpasso@qtdpassos)
  1227  079E  00F3               	movlw	0
  1228  079F  3000               	movwf	((motorantpasso@qtdpassos))+1
  1229  07A0  00F4               	movlw	064h
  1230  07A1  3064               	movwf	(motorantpasso@t)
  1231  07A2  00F5               	movlw	0
  1232  07A3  3000               	movwf	((motorantpasso@t))+1
  1233  07A4  00F6               	fcall	_motorantpasso
  1234  07A5  120A  118A  2731  120A  118A  	line	36
  1235                           	
  1236                           l789:	
  1237  07AA                     ;main.c: 36:                 if (PORTDbits.RD1 == 1)
  1238                           	bcf	status, 5	;RP0=0, select bank0
  1239  07AA  1283               	bcf	status, 6	;RP1=0, select bank0
  1240  07AB  1303               	btfss	(8),1	;volatile
  1241  07AC  1C88               	goto	u151
  1242  07AD  2FAF               	goto	u150
  1243  07AE  2FB0               u151:
  1244  07AF                     	goto	l797
  1245  07AF  2FC3               u150:
  1246  07B0                     	line	37
  1247                           	
  1248                           l791:	
  1249  07B0                     ;main.c: 37:                     estado = 4;
  1250                           	movlw	04h
  1251  07B0  3004               	movwf	(main@estado)
  1252  07B1  00F8               	movlw	0
  1253  07B2  3000               	movwf	((main@estado))+1
  1254  07B3  00F9               	goto	l797
  1255  07B4  2FC3               	
  1256                           l31:	
  1257  07B5                     	line	38
  1258                           ;main.c: 38:                 break;
  1259                           	goto	l797
  1260  07B5  2FC3               	line	39
  1261                           ;main.c: 39:             case 4:
  1262                           	
  1263                           l32:	
  1264  07B6                     	line	40
  1265                           ;main.c: 40:                 if(PORTDbits.RD1 == 0)
  1266                           	bcf	status, 5	;RP0=0, select bank0
  1267  07B6  1283               	bcf	status, 6	;RP1=0, select bank0
  1268  07B7  1303               	btfsc	(8),1	;volatile
  1269  07B8  1888               	goto	u161
  1270  07B9  2FBB               	goto	u160
  1271  07BA  2FBC               u161:
  1272  07BB                     	goto	l797
  1273  07BB  2FC3               u160:
  1274  07BC                     	line	41
  1275                           	
  1276                           l793:	
  1277  07BC                     ;main.c: 41:                     estado = 1;
  1278                           	movlw	01h
  1279  07BC  3001               	movwf	(main@estado)
  1280  07BD  00F8               	movlw	0
  1281  07BE  3000               	movwf	((main@estado))+1
  1282  07BF  00F9               	goto	l797
  1283  07C0  2FC3               	
  1284                           l33:	
  1285  07C1                     	line	42
  1286                           ;main.c: 42:                 break;
  1287                           	goto	l797
  1288  07C1  2FC3               	line	44
  1289                           	
  1290                           l795:	
  1291  07C2                     ;main.c: 44:         }
  1292                           	goto	l797
  1293  07C2  2FC3               	
  1294                           l22:	
  1295  07C3                     	
  1296                           l797:	
  1297  07C3                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1298                           ; Switch size 1, requested type "space"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ; direct_byte           11     8 (fixed)
  1304                           ; jumptable            260     6 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306                           
  1307                           	movf (main@estado+1),w
  1308  07C3  0879               	opt asmopt_push
  1309                           	opt asmopt_off
  1310                           	xorlw	0^0	; case 0
  1311  07C4  3A00               	skipnz
  1312  07C5  1903               	goto	l835
  1313  07C6  2FC8               	goto	l797
  1314  07C7  2FC3               	opt asmopt_pop
  1315                           	
  1316                           l835:	
  1317  07C8                     ; Switch size 1, requested type "space"
  1318                           ; Number of cases is 5, Range of values is 0 to 4
  1319                           ; switch strategies available:
  1320                           ; Name         Instructions Cycles
  1321                           ; simple_byte           16     9 (average)
  1322                           ; direct_byte           23     8 (fixed)
  1323                           ; jumptable            260     6 (fixed)
  1324                           ;	Chosen strategy is simple_byte
  1325                           
  1326                           	movf (main@estado),w
  1327  07C8  0878               	opt asmopt_push
  1328                           	opt asmopt_off
  1329                           	xorlw	0^0	; case 0
  1330  07C9  3A00               	skipnz
  1331  07CA  1903               	goto	l773
  1332  07CB  2F6A               	xorlw	1^0	; case 1
  1333  07CC  3A01               	skipnz
  1334  07CD  1903               	goto	l25
  1335  07CE  2F6F               	xorlw	2^1	; case 2
  1336  07CF  3A03               	skipnz
  1337  07D0  1903               	goto	l781
  1338  07D1  2F84               	xorlw	3^2	; case 3
  1339  07D2  3A01               	skipnz
  1340  07D3  1903               	goto	l787
  1341  07D4  2F9D               	xorlw	4^3	; case 4
  1342  07D5  3A07               	skipnz
  1343  07D6  1903               	goto	l32
  1344  07D7  2FB6               	goto	l797
  1345  07D8  2FC3               	opt asmopt_pop
  1346                           
  1347                           	
  1348                           l24:	
  1349  07D9                     	goto	l797
  1350  07D9  2FC3               	line	45
  1351                           ;main.c: 45:     }
  1352                           	
  1353                           l34:	
  1354  07DA                     	goto	l797
  1355  07DA  2FC3               	
  1356                           l35:	
  1357  07DB                     	line	47
  1358                           ;main.c: 46:     return;
  1359                           	
  1360                           l36:	
  1361  07DB                     	global	start
  1362                           	ljmp	start
  1363  07DB  120A  118A  2800   	opt stack 0
  1364                           GLOBAL	__end_of_main
  1365                           	__end_of_main:
  1366  07DE                     	signat	_main,89
  1367                           	global	_motorpasso_init
  1368                           
  1369 ;; *************** function _motorpasso_init *****************
  1370 ;; Defined at:
  1371 ;;		line 6 in file "motorpasso.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		None
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1398                           	file	"motorpasso.c"
  1399                           	line	6
  1400                           global __ptext1
  1401                           __ptext1:	;psect for function _motorpasso_init
  1402  06CE                     psect	text1
  1403                           	file	"motorpasso.c"
  1404                           	line	6
  1405                           	global	__size_of_motorpasso_init
  1406                           	__size_of_motorpasso_init	equ	__end_of_motorpasso_init-_motorpasso_init
  1407  000D                     	
  1408                           _motorpasso_init:	
  1409  06CE                     ;incstack = 0
  1410                           	opt	stack 7
  1411                           ; Regs used in _motorpasso_init: []
  1412                           	line	8
  1413                           	
  1414                           l653:	
  1415  06CE                     ;motorpasso.c: 8:     TRISDbits.TRISD7 = 0;
  1416                           	bsf	status, 5	;RP0=1, select bank1
  1417  06CE  1683               	bcf	status, 6	;RP1=0, select bank1
  1418  06CF  1303               	bcf	(136)^080h,7	;volatile
  1419  06D0  1388               	line	9
  1420                           ;motorpasso.c: 9:     TRISDbits.TRISD6 = 0;
  1421                           	bcf	(136)^080h,6	;volatile
  1422  06D1  1308               	line	10
  1423                           ;motorpasso.c: 10:     TRISDbits.TRISD5 = 0;
  1424                           	bcf	(136)^080h,5	;volatile
  1425  06D2  1288               	line	11
  1426                           ;motorpasso.c: 11:     TRISDbits.TRISD4 = 0;
  1427                           	bcf	(136)^080h,4	;volatile
  1428  06D3  1208               	line	12
  1429                           ;motorpasso.c: 12:     PORTDbits.RD7 =0;
  1430                           	bcf	status, 5	;RP0=0, select bank0
  1431  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1432  06D5  1303               	bcf	(8),7	;volatile
  1433  06D6  1388               	line	13
  1434                           ;motorpasso.c: 13:     PORTDbits.RD6 =0;
  1435                           	bcf	(8),6	;volatile
  1436  06D7  1308               	line	14
  1437                           ;motorpasso.c: 14:     PORTDbits.RD5 =1;
  1438                           	bsf	(8),5	;volatile
  1439  06D8  1688               	line	15
  1440                           ;motorpasso.c: 15:     PORTDbits.RD4 =0;
  1441                           	bcf	(8),4	;volatile
  1442  06D9  1208               	line	16
  1443                           	
  1444                           l47:	
  1445  06DA                     	return
  1446  06DA  0008               	opt stack 0
  1447                           GLOBAL	__end_of_motorpasso_init
  1448                           	__end_of_motorpasso_init:
  1449  06DB                     	signat	_motorpasso_init,89
  1450                           	global	_motorpasso
  1451                           
  1452 ;; *************** function _motorpasso *****************
  1453 ;; Defined at:
  1454 ;;		line 32 in file "motorpasso.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  numpassos       2    3[COMMON] int 
  1457 ;;  t               2    5[COMMON] int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         4       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          1       0       0       0       0
  1472 ;;      Totals:         5       0       0       0       0
  1473 ;;Total ram usage:        5 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		_delay
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1483                           	line	32
  1484                           global __ptext2
  1485                           __ptext2:	;psect for function _motorpasso
  1486  0705                     psect	text2
  1487                           	file	"motorpasso.c"
  1488                           	line	32
  1489                           	global	__size_of_motorpasso
  1490                           	__size_of_motorpasso	equ	__end_of_motorpasso-_motorpasso
  1491  002C                     	
  1492                           _motorpasso:	
  1493  0705                     ;incstack = 0
  1494                           	opt	stack 6
  1495                           ; Regs used in _motorpasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1496                           	line	35
  1497                           	
  1498                           l749:	
  1499  0705                     ;motorpasso.c: 32: void motorpasso (int numpassos, int t);motorpasso.c: 33: {;motorpasso
                                 .c: 35:     for ( passoatual=0; passoatual<numpassos; passoatual++ )
  1500                           	clrf	(_passoatual)
  1501  0705  01FA               	clrf	(_passoatual+1)
  1502  0706  01FB               	goto	l757
  1503  0707  2F21               	
  1504                           l60:	
  1505  0708                     	line	37
  1506                           	
  1507                           l751:	
  1508  0708                     ;motorpasso.c: 36:     {;motorpasso.c: 37:         PORTD = passos[passoatual % 4];
  1509                           	movf	(_passoatual),w
  1510  0708  087A               	andlw	03h
  1511  0709  3903               	addlw	low(_passos|((0x0)<<8))&0ffh
  1512  070A  3E24               	movwf	fsr0
  1513  070B  0084               	bcf	status, 7	;select IRP bank0
  1514  070C  1383               	movf	indf,w
  1515  070D  0800               	bcf	status, 5	;RP0=0, select bank0
  1516  070E  1283               	bcf	status, 6	;RP1=0, select bank0
  1517  070F  1303               	movwf	(8)	;volatile
  1518  0710  0088               	line	38
  1519                           	
  1520                           l753:	
  1521  0711                     ;motorpasso.c: 38:         delay(t);
  1522                           	movf	(motorpasso@t+1),w
  1523  0711  0876               	movwf	(delay@t+1)
  1524  0712  00F1               	movf	(motorpasso@t),w
  1525  0713  0875               	movwf	(delay@t)
  1526  0714  00F0               	fcall	_delay
  1527  0715  120A  118A  26EE  120A  118A  	line	39
  1528                           	
  1529                           l755:	
  1530  071A                     ;motorpasso.c: 39:     }
  1531                           	movlw	01h
  1532  071A  3001               	addwf	(_passoatual),f
  1533  071B  07FA               	skipnc
  1534  071C  1803               	incf	(_passoatual+1),f
  1535  071D  0AFB               	movlw	0
  1536  071E  3000               	addwf	(_passoatual+1),f
  1537  071F  07FB               	goto	l757
  1538  0720  2F21               	
  1539                           l59:	
  1540  0721                     	
  1541                           l757:	
  1542  0721                     	movf	(_passoatual+1),w
  1543  0721  087B               	xorlw	80h
  1544  0722  3A80               	movwf	(??_motorpasso+0)+0
  1545  0723  00F7               	movf	(motorpasso@numpassos+1),w
  1546  0724  0874               	xorlw	80h
  1547  0725  3A80               	subwf	(??_motorpasso+0)+0,w
  1548  0726  0277               	skipz
  1549  0727  1D03               	goto	u105
  1550  0728  2F2B               	movf	(motorpasso@numpassos),w
  1551  0729  0873               	subwf	(_passoatual),w
  1552  072A  027A               u105:
  1553  072B                     
  1554                           	skipc
  1555  072B  1C03               	goto	u101
  1556  072C  2F2E               	goto	u100
  1557  072D  2F2F               u101:
  1558  072E                     	goto	l751
  1559  072E  2F08               u100:
  1560  072F                     	goto	l62
  1561  072F  2F30               	
  1562                           l61:	
  1563  0730                     	line	40
  1564                           	
  1565                           l62:	
  1566  0730                     	return
  1567  0730  0008               	opt stack 0
  1568                           GLOBAL	__end_of_motorpasso
  1569                           	__end_of_motorpasso:
  1570  0731                     	signat	_motorpasso,8313
  1571                           	global	_motorantpasso
  1572                           
  1573 ;; *************** function _motorantpasso *****************
  1574 ;; Defined at:
  1575 ;;		line 47 in file "motorpasso.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  qtdpassos       2    3[COMMON] int 
  1578 ;;  t               2    5[COMMON] int 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         4       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0
  1592 ;;      Temps:          1       0       0       0       0
  1593 ;;      Totals:         5       0       0       0       0
  1594 ;;Total ram usage:        5 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    1
  1597 ;; This function calls:
  1598 ;;		_delay
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1604                           	line	47
  1605                           global __ptext3
  1606                           __ptext3:	;psect for function _motorantpasso
  1607  0731                     psect	text3
  1608                           	file	"motorpasso.c"
  1609                           	line	47
  1610                           	global	__size_of_motorantpasso
  1611                           	__size_of_motorantpasso	equ	__end_of_motorantpasso-_motorantpasso
  1612  0030                     	
  1613                           _motorantpasso:	
  1614  0731                     ;incstack = 0
  1615                           	opt	stack 6
  1616                           ; Regs used in _motorantpasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1617                           	line	50
  1618                           	
  1619                           l759:	
  1620  0731                     ;motorpasso.c: 47: void motorantpasso (int qtdpassos, int t);motorpasso.c: 48: {;motorpa
                                 sso.c: 50:     for ( passoagora=0; passoagora<qtdpassos; passoagora++ )
  1621                           	bcf	status, 5	;RP0=0, select bank0
  1622  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  1623  0732  1303               	clrf	(_passoagora)
  1624  0733  01A8               	clrf	(_passoagora+1)
  1625  0734  01A9               	goto	l767
  1626  0735  2F51               	
  1627                           l72:	
  1628  0736                     	line	52
  1629                           	
  1630                           l761:	
  1631  0736                     ;motorpasso.c: 51:     {;motorpasso.c: 52:         PORTD = passo[passoagora % 4];
  1632                           	bcf	status, 5	;RP0=0, select bank0
  1633  0736  1283               	bcf	status, 6	;RP1=0, select bank0
  1634  0737  1303               	movf	(_passoagora),w
  1635  0738  0828               	andlw	03h
  1636  0739  3903               	addlw	low(_passo|((0x0)<<8))&0ffh
  1637  073A  3E20               	movwf	fsr0
  1638  073B  0084               	bcf	status, 7	;select IRP bank0
  1639  073C  1383               	movf	indf,w
  1640  073D  0800               	movwf	(8)	;volatile
  1641  073E  0088               	line	53
  1642                           	
  1643                           l763:	
  1644  073F                     ;motorpasso.c: 53:         delay(t);
  1645                           	movf	(motorantpasso@t+1),w
  1646  073F  0876               	movwf	(delay@t+1)
  1647  0740  00F1               	movf	(motorantpasso@t),w
  1648  0741  0875               	movwf	(delay@t)
  1649  0742  00F0               	fcall	_delay
  1650  0743  120A  118A  26EE  120A  118A  	line	54
  1651                           	
  1652                           l765:	
  1653  0748                     ;motorpasso.c: 54:     }
  1654                           	movlw	01h
  1655  0748  3001               	bcf	status, 5	;RP0=0, select bank0
  1656  0749  1283               	bcf	status, 6	;RP1=0, select bank0
  1657  074A  1303               	addwf	(_passoagora),f
  1658  074B  07A8               	skipnc
  1659  074C  1803               	incf	(_passoagora+1),f
  1660  074D  0AA9               	movlw	0
  1661  074E  3000               	addwf	(_passoagora+1),f
  1662  074F  07A9               	goto	l767
  1663  0750  2F51               	
  1664                           l71:	
  1665  0751                     	
  1666                           l767:	
  1667  0751                     	movf	(_passoagora+1),w
  1668  0751  0829               	xorlw	80h
  1669  0752  3A80               	movwf	(??_motorantpasso+0)+0
  1670  0753  00F7               	movf	(motorantpasso@qtdpassos+1),w
  1671  0754  0874               	xorlw	80h
  1672  0755  3A80               	subwf	(??_motorantpasso+0)+0,w
  1673  0756  0277               	skipz
  1674  0757  1D03               	goto	u115
  1675  0758  2F5B               	movf	(motorantpasso@qtdpassos),w
  1676  0759  0873               	subwf	(_passoagora),w
  1677  075A  0228               u115:
  1678  075B                     
  1679                           	skipc
  1680  075B  1C03               	goto	u111
  1681  075C  2F5E               	goto	u110
  1682  075D  2F5F               u111:
  1683  075E                     	goto	l761
  1684  075E  2F36               u110:
  1685  075F                     	goto	l74
  1686  075F  2F60               	
  1687                           l73:	
  1688  0760                     	line	55
  1689                           	
  1690                           l74:	
  1691  0760                     	return
  1692  0760  0008               	opt stack 0
  1693                           GLOBAL	__end_of_motorantpasso
  1694                           	__end_of_motorantpasso:
  1695  0761                     	signat	_motorantpasso,8313
  1696                           	global	_delay
  1697                           
  1698 ;; *************** function _delay *****************
  1699 ;; Defined at:
  1700 ;;		line 4 in file "delay.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  t               2    0[COMMON] unsigned int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         2       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0
  1716 ;;      Temps:          1       0       0       0       0
  1717 ;;      Totals:         3       0       0       0       0
  1718 ;;Total ram usage:        3 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_motorpasso
  1724 ;;		_motorantpasso
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1728                           	file	"delay.c"
  1729                           	line	4
  1730                           global __ptext4
  1731                           __ptext4:	;psect for function _delay
  1732  06EE                     psect	text4
  1733                           	file	"delay.c"
  1734                           	line	4
  1735                           	global	__size_of_delay
  1736                           	__size_of_delay	equ	__end_of_delay-_delay
  1737  0017                     	
  1738                           _delay:	
  1739  06EE                     ;incstack = 0
  1740                           	opt	stack 6
  1741                           ; Regs used in _delay: [wreg+status,2+status,0]
  1742                           	line	7
  1743                           	
  1744                           l743:	
  1745  06EE                     ;delay.c: 4: void delay(unsigned int t );delay.c: 6: {;delay.c: 7:     while ( t )
  1746                           	goto	l747
  1747  06EE  2EFD               	
  1748                           l6:	
  1749  06EF                     	line	9
  1750                           	
  1751                           l745:	
  1752  06EF                     ;delay.c: 8:     {;delay.c: 9:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1753                           	opt asmopt_push
  1754                           opt asmopt_off
  1755                           	movlw	199
  1756  06EF  30C7               movwf	((??_delay+0)+0),f
  1757  06F0  00F2               	u177:
  1758  06F1                     	nop2
  1759  06F1  2EF2               decfsz	(??_delay+0)+0,f
  1760  06F2  0BF2               	goto	u177
  1761  06F3  2EF1               	nop2
  1762  06F4  2EF5               	nop2
  1763  06F5  2EF6               opt asmopt_pop
  1764                           
  1765                           	line	10
  1766                           ;delay.c: 10:         --t;
  1767                           	movlw	01h
  1768  06F6  3001               	subwf	(delay@t),f
  1769  06F7  02F0               	movlw	0
  1770  06F8  3000               	skipc
  1771  06F9  1C03               	decf	(delay@t+1),f
  1772  06FA  03F1               	subwf	(delay@t+1),f
  1773  06FB  02F1               	goto	l747
  1774  06FC  2EFD               	line	11
  1775                           ;delay.c: 11:     }
  1776                           	
  1777                           l5:	
  1778  06FD                     	line	7
  1779                           	
  1780                           l747:	
  1781  06FD                     ;delay.c: 7:     while ( t )
  1782                           	movf	((delay@t)),w
  1783  06FD  0870               iorwf	((delay@t+1)),w
  1784  06FE  0471               	btfss	status,2
  1785  06FF  1D03               	goto	u91
  1786  0700  2F02               	goto	u90
  1787  0701  2F03               u91:
  1788  0702                     	goto	l745
  1789  0702  2EEF               u90:
  1790  0703                     	goto	l8
  1791  0703  2F04               	
  1792                           l7:	
  1793  0704                     	line	12
  1794                           	
  1795                           l8:	
  1796  0704                     	return
  1797  0704  0008               	opt stack 0
  1798                           GLOBAL	__end_of_delay
  1799                           	__end_of_delay:
  1800  0705                     	signat	_delay,4217
  1801                           global	___latbits
  1802                           ___latbits	equ	2
  1803  0002                     	global	btemp
  1804                           	btemp set 07Eh
  1805  007E                     
  1806                           	DABS	1,126,2	;btemp
  1807                           	global	wtemp0
  1808                           	wtemp0 set btemp+0
  1809  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorantpasso
    _main->_motorpasso
    _motorpasso->_delay
    _motorantpasso->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     771
                                              8 COMMON     2     2      0
                      _motorantpasso
                         _motorpasso
                    _motorpasso_init
 ---------------------------------------------------------------------------------
 (1) _motorpasso_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorpasso                                           5     1      4     371
                                              3 COMMON     5     1      4
                              _delay
 ---------------------------------------------------------------------------------
 (1) _motorantpasso                                        5     1      4     371
                                              3 COMMON     5     1      4
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     175
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _motorantpasso
     _delay
   _motorpasso
     _delay
   _motorpasso_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 02 16:37:33 2021

                       l5 06FD                         l6 06EF                         l7 0704  
                       l8 0704                         pc 0002               __CFG_CP$OFF 0000  
                      l21 0769                        l22 07C3                        l30 079D  
                      l31 07B5                        l23 076A                        l24 07D9  
                      l32 07B6                        l33 07C1                        l25 076F  
                      l34 07DA                        l26 077A                        l35 07DB  
                      l27 0783                        l60 0708                        l36 07DB  
                      l28 0784                        l61 0730                        l29 079C  
                      l62 0730                        l71 0751                        l47 06DA  
                      l72 0736                        l73 0760                        l74 0760  
                      l59 0721                        u90 0703                        u91 0702  
                      fsr 0004           ??_motorantpasso 0077                       l653 06CE  
                     l743 06EE                       l751 0708                       l745 06EF  
                     l761 0736                       l753 0711                       l747 06FD  
                     l763 073F                       l755 071A                       l835 07C8  
                     l771 0763                       l765 0748                       l757 0721  
                     l749 0705                       l781 0784                       l773 076A  
                     l767 0751                       l759 0731                       l791 07B0  
                     l783 0791                       l775 0775                       l793 07BC  
                     l785 0797                       l777 077A                       l769 0761  
                     l795 07C2                       l787 079D                       l779 077E  
                     l789 07AA                       l797 07C3                       u100 072F  
                     u101 072E                       u110 075F                       u111 075E  
                     u120 0775                       u105 072B                       u121 0774  
                     u130 077E                       u115 075B                       u131 077D  
                     u140 0797                       u141 0796                       u150 07B0  
                     u151 07AF                       u160 07BC                       u161 07BB  
                     u177 06F1              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 0761                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTD 0008            __CFG_FCMEN$OFF 0000                     _delay 06EE  
                   _passo 0020            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E    motorantpasso@qtdpassos 0073  
          __CFG_MCLRE$OFF 0000           __initialization 07DE              __end_of_main 07DE  
       ??_motorpasso_init 0070                    ??_main 0078                    ?_delay 0070  
          __CFG_PWRTE$OFF 0000                    delay@t 0070                    _passos 0024  
            __pdataCOMMON 007C   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 06C6             __end_of_delay 0705                   ??_delay 0072  
              __pbssBANK0 0028                __pmaintext 0761     __end_of_motorantpasso 0761  
         _motorpasso_init 06CE                   __ptext1 06CE                   __ptext2 0705  
                 __ptext3 0731                   __ptext4 06EE      end_of_initialization 07FC  
              _passoagora 0028                _passoatual 007A                _motorpasso 0705  
               _PORTDbits 0008               motorpasso@t 0075                 _TRISDbits 0088  
 __end_of_motorpasso_init 06DB                main@estado 0078             __pidataCOMMON 06C4  
     start_initialization 07DE       motorpasso@numpassos 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 06DB               __pdataBANK0 0020               ?_motorpasso 0073  
             __pbssCOMMON 007A                 ___latbits 0002          ?_motorpasso_init 0070  
          __size_of_delay 0017       __size_of_motorpasso 002C    __size_of_motorantpasso 0030  
               _numpassos 007D                 _qtdpassos 007C             _motorantpasso 0731  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 007D            motorantpasso@t 0075  
            ??_motorpasso 0077            ?_motorantpasso 0073                  init_ram0 06DF  
      __end_of_motorpasso 0731  __size_of_motorpasso_init 000D  
